apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose-windows-amd64 -f docker-kompose.yml convert -c
    kompose.version: 1.19.0 (f63a961c)
    kompose.volume.size: 1Gi
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose-windows-amd64 -f docker-kompose.yml convert -c
        kompose.version: 1.19.0 (f63a961c)
        kompose.volume.size: 1Gi
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
    spec:
      containers:
      - env:
        - name: DJANGO_SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: DJANGO_SECRET_KEY
              name: postgres-secrets-django-docker-env
        - name: PGDATA
          valueFrom:
            configMapKeyRef:
              key: PGDATA
              name: postgres-secrets-django-docker-env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: postgres-secrets-django-docker-env
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: postgres-secrets-django-docker-env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres-secrets-django-docker-env
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PORT
              name: postgres-secrets-django-docker-env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: postgres-secrets-django-docker-env
        - name: SOLR_URL
          valueFrom:
            configMapKeyRef:
              key: SOLR_URL
              name: postgres-secrets-django-docker-env
        image: postgres:alpine
        name: postgres
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres
      restartPolicy: Always
      volumes:
      - name: postgres
        persistentVolumeClaim:
          claimName: postgres
status: {}
